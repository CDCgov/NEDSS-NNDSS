io:
  fileLocation: ${NND_FILE_LOCATION:NA}

data_exchange:
  clientId: ${NND_DE_CLIENT_ID}
  secret: ${NND_DE_SECRET}
  url: ${NND_DE_URL}
  endpoint_token: ${NND_DE_URL}${NND_DE_TOKEN:/extraction/api/auth/token}
  endpoint_de: ${NND_DE_URL}${NND_DE_DE:/extraction/api/nnd}
  endpoint_generic: ${NND_DE_URL}${NND_DE_GENERIC:/extraction/api/datasync}
  endpoint_generic_meta_data: ${NND_DE_URL}${NND_DE_GENERIC_META_DATA:/extraction/api/datasync/metadata}
  endpoint_generic_total_record: ${NND_DE_URL}${NND_DE_GENERIC_TOTAL_RECORD:/extraction/api/datasync/count}
  version: "1"
  retry:
    max-attempts: ${API_MAX_RETRY:5}
    delay-ms: ${API_RETRY_DELAY_MS:3000}
    stuck-threshold-minutes: ${API_STUCK_THRESHOLD_MINUTE:10}
    max-backoff-ms: ${API_MAX_BACKOFF:60000}
nnd:
  fullLoad: ${NND_FULL_LOAD:false}
  pullLimit: ${NND_PULL_LIMIT:0}
  insertLimit: ${NND_INSERT_LIMIT:1000}

poll:
  single_time_poll_enabled: ${SINGLE_TIME_POLL:false}
  nnd:
    enabled: ${NND_POLL_ENABLED:false}
  nnd_modern:
    enabled: ${NND_MODERN_POLL_ENABLED:false}
  rdb:
    enabled: ${RDB_POLL_ENABLED:false}
  rdb_modern:
    enabled: ${RDB_MODERN_POLL_ENABLED:false}
  odse:
    enabled: ${ODSE_POLL_ENABLED:false}
  covid_datamart:
    enabled: ${COVID_DATA_MART_ENABLED:false}
  srte:
    enabled: ${SRTE_POLL_ENABLED:false}
  edx_activity:
    enabled: ${EDX_ACTIVITY_ENABLED:false}

log:
  detail_log_applied: ${DEBUG_LOG:false}

datasync:
  store_in_sql: ${DATASYNC_STORE_SQL:false}
  store_in_local: ${DATASYNC_STORE_LOCAL:false}
  store_in_S3: ${DATASYNC_STORE_S3:false}
  local_file_path: ${DATASYNC_LOCAL_FILE_PATH:NA}
  sql_error_handle_log: ${DATASYNC_SQL_ERROR_PATH:NA}
  sql_reprocessing_data: ${DATASYNC_STORE_SQL_REPOCESSING_DATA:false}
  data_sync_batch_limit: ${DATASYNC_BATCH_LIMIT:1000}
  data_sync_delete_on_initial: ${DATASYNC_DELETE:false}
  handle_dynamic_column:
    enabled: ${DYNAMIC_COL_ENABLED:false}

aws:
  auth:
    static:
      key_id: ${AWS_KEY_ID:}
      access_key: ${AWS_ACCESS_KEY:}
      token: ${AWS_TOKEN:}
    profile:
      profile_name: ${AWS_PROFILE:}
  s3:
    bucket-name: ${S3_BUCKET_NAME:}
    region: ${S3_REGION:}

spring:
  main:
    web-application-type: none
  application:
    name: nnd-data-poll-service
  task:
    scheduling:
      pool:
        size: 4
scheduler:
  zone: ${TIME_ZONE:UTC}
  # America/New_York
  # UTC
  cron: ${NBS_NND_CRON:0 */1 * * * * }
  cron-data-sync: ${NBS_DATA_CRON:0 */1 * * * * }
  # "0 */5 0-2 * * *"
  # every 5 min from 12 am to 3 am
  # 0 * 0-2 * * *
  # 0 (start at zero sec), * (run every min),  0-2 (run during 12 am to 3 am), * (run every day), * (run every month), * (run every year)
thread:
  # 20000 records / 2 batch = 10000 per api request
  processer-level:
      enabled: ${THREAD_PROCESSOR_LEVEL_ENABLED:false}
      batch-size: ${THREAD_PROCESSOR_LEVEL_BATCH_SIZE:2}
      initial-concurrency: ${THREAD_PROCESSOR_LEVEL_INIT_CONCURRENCY:2}
      max-concurrency: ${THREAD_PROCESSOR_LEVEL_MAX_CONCURRENCY:4}
      max-retry: ${THREAD_PROCESSOR_LEVEL_MAX_RETRY:5}
  # 10000 record (1 processor batch) / 2000 = 5 concurrency
  jdbc-batch-level:
      enabled: ${THREAD_JDBC_BATCH_LEVEL_ENABLED:false}
      chunk-size: ${THREAD_JDBC_BATCH_LEVEL_CHUNK_SIZE:2000}
      initial-concurrency: ${THREAD_JDBC_BATCH_LEVEL_INIT_CONCURRENCY:5}
      max-concurrency: ${THREAD_JDBC_BATCH_LEVEL_MAX_CONCURRENCY:10}
      max-retry: ${THREAD_JDBC_BATCH_LEVEL_MAX_RETRY:5}
  jdbc-level: #Single upsert or Single Insert level
      enabled: ${THREAD_JDBC_LEVEL_ENABLED:false}
      initial-concurrency: ${THREAD_JDBC_LEVEL_INIT_CONCURRENCY:10}
      max-concurrency: ${THREAD_JDBC_LEVEL_MAX_CONCURRENCY:20}
      max-retry: ${THREAD_JDBC_LEVEL_MAX_RETRY:5}
  table-level:
      enabled: false
      max-concurrency: 1
---
spring:
  main:
    web-application-type: none
  config:
    activate:
      on-profile: default
  datasource:
    hikari:
      maximum-pool-size: ${HIKARI_POOL_SIZE:300}
      connection-timeout: ${HIKARI_CON_TIMEOUT:180000}
      minimum-idle: ${HIKARI_MINIMUM_IDLE:50}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:300000}
      max-lifetime: ${HIKARI_MAX_LIFETIME:1800000}
      pool-name: ${HIKARI_POOL_NAME:SQLServerHikariCP}
      leak-detection-threshold: ${LEAK_DETECTION_THRESHOLD:60000}
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: ${OP_DBUSER}
    password: ${OP_DBPASSWORD}
    nnd:
      url: jdbc:sqlserver://${OP_DBSERVER:};databaseName=${OP_DBNAME:};encrypt=true;trustServerCertificate=true;
    dataSync:
      url: jdbc:sqlserver://${OP_DBSERVER:};databaseName=${DATASYNC_DBNAME:};encrypt=true;trustServerCertificate=true;
  jpa:
    show-sql: false
    properties:
      hibernate.format_sql: false
      hibernate.use_sql_comments: false
    hibernate:
      ddl-auto: none
#logging:
#  level:
#    com.zaxxer.hikari: DEBUG

#logging:
#  level:
#    root: INFO
#    com.zaxxer.hikari: DEBUG
#    org.springframework.jdbc: DEBUG
#    org.hibernate.SQL: OFF
#    org.hibernate.type.descriptor.sql: OFF
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    gov.cdc.nnddatapollservice: DEBUG