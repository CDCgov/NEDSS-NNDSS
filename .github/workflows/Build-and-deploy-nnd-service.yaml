name: Build and push nnd-service image to ECR
on:
  push:
    branches:
      - main
      - master
      - update-github-action-**
    paths-ignore:
      - 'netss-message-processer/**'
      - 'nnd-data-poll-service/**'
      - 'nnd-service/**'
jobs:
  sonar_scan:
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/sonar.yaml
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      PASSED_GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  extract-version-suffix:
    name: Extract image tag from version
    needs: sonar_scan
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.parse.outputs.image_tag }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read version from build.gradle and extract suffix
        id: parse
        run: |
          version_line=$(grep "^version" ./nnd-service/build.gradle)
          version=$(echo "$version_line" | sed -E "s/version *= *['\"]([^'\"]+)['\"]/\1/")
          echo "Full version: $version"

          # Default value
          image_tag="SNAPSHOT"

          # Match SNAPSHOT-123
          if [[ "$version" =~ SNAPSHOT-([0-9]+) ]]; then
            image_tag="SNAPSHOT-${BASH_REMATCH[1]}"
          elif [[ "$version" =~ SNAPSHOT ]]; then
            image_tag="SNAPSHOT"
          fi

          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT
  call-build-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Container
    needs: extract-version-suffix
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: nnd-service
      dockerfile_relative_path: -f ./nnd-service/Dockerfile .
      environment_classifier: ${{ needs.extract-version-suffix.outputs.image_tag }}
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  call-update-helm-nnd-service:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    name: Request DEV deployment
    needs: call-build-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: nnd-service
      values_file_with_path: charts/nnd-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'gradle'

    - name: create-data-sync-service-jar
      working-directory: ./nnd-data-poll-service
      run: ./gradlew build --no-daemon
    - name: upload-data-sync-service-jar
      uses: actions/upload-artifact@v4
      with:
        name: NND-data-sync-service-jar
        path: nnd-data-poll-service/build/libs/data-sync-service.jar

    - name: create-netss-message-processor-jar
      working-directory: ./netss-message-processor
      run: ./gradlew build --no-daemon
    - name: upload-netss-message-processor-jar
      uses: actions/upload-artifact@v4
      with:
        name: NETSS-message-processor-jar
        path: netss-message-processor/build/libs/netss-message-processor.jar