-- BMIRD_CASE
WITH PaginatedResults AS (
    SELECT BMIRD_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM BMIRD_CASE
             JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- BMIRD_MULTI_VALUE_FIELD_GROUP
WITH PaginatedResults AS (
    SELECT BMIRD_MULTI_VALUE_FIELD_GROUP.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM BMIRD_MULTI_VALUE_FIELD_GROUP
             JOIN BMIRD_CASE ON BMIRD_MULTI_VALUE_FIELD_GROUP.BMIRD_MULTI_VAL_GRP_KEY = BMIRD_CASE.BMIRD_MULTI_VAL_GRP_KEY
             JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- CASE_COUNT
WITH PaginatedResults AS (
    SELECT A.*, ROW_NUMBER() OVER (ORDER BY B.LAST_CHG_TIME ASC, B.ADD_TIME ASC) AS RowNum
    FROM CASE_COUNT AS A
             INNER JOIN INVESTIGATION AS B
                        ON A.INVESTIGATION_KEY = B.INVESTIGATION_KEY
    WHERE B.ADD_TIME < :timestamp OR B.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- CONFIRMATION_METHOD_GROUP
WITH PaginatedResults AS (
    SELECT CONFIRMATION_METHOD_GROUP.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM CONFIRMATION_METHOD_GROUP
             JOIN INVESTIGATION ON CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_CASE_MANAGEMENT
WITH PaginatedResults AS (
    SELECT D_CASE_MANAGEMENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_CASE_MANAGEMENT
             JOIN INVESTIGATION ON D_CASE_MANAGEMENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INTERVIEW
WITH PaginatedResults AS (
    SELECT D_INTERVIEW.*, ROW_NUMBER() OVER (ORDER BY D_INTERVIEW.LAST_CHG_TIME ASC, D_INTERVIEW.ADD_TIME ASC) AS RowNum
    FROM D_INTERVIEW
    WHERE D_INTERVIEW.ADD_TIME < :timestamp OR D_INTERVIEW.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_ADMINISTRATIVE
WITH PaginatedResults AS (
    SELECT D_INV_ADMINISTRATIVE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_ADMINISTRATIVE
             JOIN F_PAGE_CASE ON D_INV_ADMINISTRATIVE.D_INV_ADMINISTRATIVE_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_EPIDEMIOLOGY
WITH PaginatedResults AS (
    SELECT D_INV_EPIDEMIOLOGY.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_EPIDEMIOLOGY
             JOIN F_PAGE_CASE ON D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_HIV
WITH PaginatedResults AS (
    SELECT D_INV_HIV.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_HIV
             JOIN F_PAGE_CASE ON D_INV_HIV.D_INV_HIV_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_LAB_FINDING
WITH PaginatedResults AS (
    SELECT D_INV_LAB_FINDING.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_LAB_FINDING
             JOIN F_PAGE_CASE ON D_INV_LAB_FINDING.D_INV_LAB_FINDING_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_MEDICAL_HISTORY
WITH PaginatedResults AS (
    SELECT D_INV_MEDICAL_HISTORY.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_MEDICAL_HISTORY
             JOIN F_PAGE_CASE ON D_INV_MEDICAL_HISTORY.D_INV_MEDICAL_HISTORY_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_RISK_FACTOR
WITH PaginatedResults AS (
    SELECT D_INV_RISK_FACTOR.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_RISK_FACTOR
             JOIN F_PAGE_CASE ON D_INV_RISK_FACTOR.D_INV_RISK_FACTOR_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_TREATMENT
WITH PaginatedResults AS (
    SELECT D_INV_TREATMENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_TREATMENT
             JOIN F_PAGE_CASE ON D_INV_TREATMENT.D_INV_TREATMENT_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_INV_VACCINATION
WITH PaginatedResults AS (
    SELECT D_INV_VACCINATION.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM D_INV_VACCINATION
             JOIN F_PAGE_CASE ON D_INV_VACCINATION.D_INV_VACCINATION_KEY = F_PAGE_CASE.INVESTIGATION_KEY
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_PCR_SOURCE_GROUP
WITH PaginatedResults AS (
    SELECT D_PCR_SOURCE_GROUP.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, INVESTIGATION.ADD_TIME ASC) AS RowNum
    FROM D_PCR_SOURCE_GROUP
             JOIN F_VAR_PAM ON F_VAR_PAM.D_PCR_SOURCE_GROUP_KEY = D_PCR_SOURCE_GROUP.D_PCR_SOURCE_GROUP_KEY
             JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.ADD_TIME < :timestamp OR INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_RASH_LOC_GEN_GROUP
WITH PaginatedResults AS (
    SELECT D_RASH_LOC_GEN_GROUP.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, INVESTIGATION.ADD_TIME ASC) AS RowNum
    FROM D_RASH_LOC_GEN_GROUP
             JOIN F_VAR_PAM ON F_VAR_PAM.D_RASH_LOC_GEN_GROUP_KEY = D_RASH_LOC_GEN_GROUP.D_RASH_LOC_GEN_GROUP_KEY
             JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.ADD_TIME < :timestamp OR INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- D_VAR_PAM
WITH PaginatedResults AS (
    SELECT D_VAR_PAM.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, INVESTIGATION.ADD_TIME ASC) AS RowNum
    FROM D_VAR_PAM
             JOIN F_VAR_PAM ON F_VAR_PAM.D_VAR_PAM_KEY = D_VAR_PAM.D_VAR_PAM_KEY
             JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.ADD_TIME < :timestamp OR INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- F_INTERVIEW_CASE
WITH PaginatedResults AS (
    SELECT F_INTERVIEW_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, D_INTERVIEW.LAST_CHG_TIME ASC, D_INTERVIEW.ADD_TIME ASC) AS RowNum
    FROM F_INTERVIEW_CASE
             JOIN INVESTIGATION ON F_INTERVIEW_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
             JOIN D_INTERVIEW ON F_INTERVIEW_CASE.D_INTERVIEW_KEY = D_INTERVIEW.D_INTERVIEW_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp OR D_INTERVIEW.ADD_TIME < :timestamp OR D_INTERVIEW.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- F_PAGE_CASE
WITH PaginatedResults AS (
    SELECT F_PAGE_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM F_PAGE_CASE
             JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- F_STD_PAGE_CASE
WITH PaginatedResults AS (
    SELECT F_STD_PAGE_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM F_STD_PAGE_CASE
             JOIN INVESTIGATION ON F_STD_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- F_VAR_PAM
WITH PaginatedResults AS (
    SELECT F_VAR_PAM.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, INVESTIGATION.ADD_TIME ASC) AS RowNum
    FROM F_VAR_PAM
             JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.ADD_TIME < :timestamp OR INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- GENERIC_CASE
WITH PaginatedResults AS (
    SELECT GENERIC_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM GENERIC_CASE
             JOIN INVESTIGATION ON GENERIC_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- HEPATITIS_CASE
WITH PaginatedResults AS (
    SELECT HEPATITIS_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM HEPATITIS_CASE
             JOIN INVESTIGATION ON HEPATITIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- LDF_DATA
WITH PaginatedResults AS (
    SELECT LDF_DATA.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM LDF_DATA
             JOIN LDF_GROUP ON LDF_DATA.LDF_GROUP_KEY = LDF_GROUP.LDF_GROUP_KEY
             JOIN INVESTIGATION ON LDF_GROUP.BUSINESS_OBJECT_UID = INVESTIGATION.CASE_UID
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- LDF_FOODBORNE
WITH PaginatedResults AS (
    SELECT LDF_FOODBORNE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM LDF_FOODBORNE
             JOIN INVESTIGATION ON LDF_FOODBORNE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- MEASLES_CASE
WITH PaginatedResults AS (
    SELECT MEASLES_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM MEASLES_CASE
             JOIN INVESTIGATION ON MEASLES_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- NOTIFICATION
WITH PaginatedResults AS (
    SELECT N.*, ROW_NUMBER() OVER (ORDER BY N.NOTIFICATION_LAST_CHANGE_TIME ASC) AS RowNum
    FROM NOTIFICATION N
    WHERE N.NOTIFICATION_LAST_CHANGE_TIME < :timestamp
       OR (N.NOTIFICATION_LAST_CHANGE_TIME IS NULL AND EXISTS (
        SELECT 1
        FROM NOTIFICATION_EVENT NE
                 JOIN INVESTIGATION I ON NE.INVESTIGATION_KEY = I.INVESTIGATION_KEY
        WHERE NE.NOTIFICATION_KEY = N.NOTIFICATION_KEY AND I.LAST_CHG_TIME < :timestamp))
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- NOTIFICATION_EVENT
WITH PaginatedResults AS (
    SELECT NOTIFICATION_EVENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM NOTIFICATION_EVENT
             JOIN INVESTIGATION ON NOTIFICATION_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- PERTUSSIS_CASE
WITH PaginatedResults AS (
    SELECT PERTUSSIS_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM PERTUSSIS_CASE
             JOIN INVESTIGATION ON PERTUSSIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- RUBELLA_CASE
WITH PaginatedResults AS (
    SELECT RUBELLA_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM RUBELLA_CASE
             JOIN INVESTIGATION ON RUBELLA_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- TREATMENT
WITH PaginatedResults AS (
    SELECT TREATMENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM TREATMENT
             JOIN TREATMENT_EVENT ON TREATMENT.TREATMENT_KEY = TREATMENT_EVENT.TREATMENT_KEY
             JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- TREATMENT_EVENT
WITH PaginatedResults AS (
    SELECT TREATMENT_EVENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum
    FROM TREATMENT_EVENT
             JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;

-- VAR_PAM_LDF
WITH PaginatedResults AS (
    SELECT VAR_PAM_LDF.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, VAR_PAM_LDF.ADD_TIME ASC) AS RowNum
    FROM VAR_PAM_LDF
             JOIN INVESTIGATION ON VAR_PAM_LDF.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY
    WHERE VAR_PAM_LDF.ADD_TIME < :timestamp OR INVESTIGATION.LAST_CHG_TIME < :timestamp
)
SELECT *
FROM PaginatedResults
WHERE RowNum BETWEEN :startRow AND :endRow;
