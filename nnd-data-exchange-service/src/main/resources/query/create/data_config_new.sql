INSERT INTO [RDB].[dbo].[data_sync_config] (table_name, source_db, query, query_with_limit, query_with_null_timestamp, query_count, query_with_pagination) VALUES
    ('CONDITION', 'RDB',
    'SELECT * FROM CONDITION;',
    NULL,
    NULL,
    'SELECT COUNT(*) FROM CONDITION JOIN INVESTIGATION ON CONDITION.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM CONDITION JOIN INVESTIGATION ON CONDITION.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('Rdb_Date', 'RDB',
    'SELECT * FROM Rdb_Date;',
    NULL,
    NULL,
    'SELECT COUNT(*) FROM Rdb_Date WHERE LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY LAST_CHG_TIME ASC) AS RowNum FROM Rdb_Date WHERE LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('D_PATIENT', 'RDB',
    'SELECT * FROM D_PATIENT WHERE D_PATIENT.PATIENT_LAST_CHANGE_TIME :operator :timestamp;',
    'SELECT TOP(:limit) * FROM D_PATIENT WHERE D_PATIENT.PATIENT_LAST_CHANGE_TIME :operator :timestamp ORDER BY D_PATIENT.PATIENT_LAST_CHANGE_TIME ASC;',
    'SELECT * FROM D_PATIENT WHERE D_PATIENT.PATIENT_LAST_CHANGE_TIME IS NULL;',
    'SELECT COUNT(*) FROM D_PATIENT WHERE D_PATIENT.PATIENT_LAST_CHANGE_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY D_PATIENT.PATIENT_LAST_CHANGE_TIME ASC) AS RowNum FROM D_PATIENT WHERE D_PATIENT.PATIENT_LAST_CHANGE_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('INVESTIGATION', 'RDB',
    'SELECT * FROM INVESTIGATION WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) * FROM INVESTIGATION WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    'SELECT * FROM INVESTIGATION WHERE INVESTIGATION.LAST_CHG_TIME IS NULL;',
    'SELECT COUNT(*) FROM INVESTIGATION WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM INVESTIGATION WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('CASE_COUNT', 'RDB',
    'SELECT A.* FROM CASE_COUNT as A INNER JOIN INVESTIGATION as B ON A.INVESTIGATION_KEY = B.INVESTIGATION_KEY WHERE B.ADD_TIME :operator :timestamp OR B.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) A.* FROM CASE_COUNT as A INNER JOIN INVESTIGATION as B ON A.INVESTIGATION_KEY = B.INVESTIGATION_KEY WHERE B.ADD_TIME :operator :timestamp OR B.LAST_CHG_TIME :operator :timestamp ORDER BY CASE WHEN B.ADD_TIME :operator :timestamp THEN B.ADD_TIME ELSE B.LAST_CHG_TIME END ASC;',
    NULL,
    'SELECT COUNT(*) FROM CASE_COUNT AS A INNER JOIN INVESTIGATION AS B ON A.INVESTIGATION_KEY = B.INVESTIGATION_KEY WHERE B.ADD_TIME :operator :timestamp OR B.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT A.*, ROW_NUMBER() OVER (ORDER BY B.LAST_CHG_TIME ASC, B.ADD_TIME ASC) AS RowNum FROM CASE_COUNT AS A INNER JOIN INVESTIGATION AS B ON A.INVESTIGATION_KEY = B.INVESTIGATION_KEY WHERE B.ADD_TIME :operator :timestamp OR B.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('BMIRD_CASE', 'RDB',
    'SELECT BMIRD_CASE.* FROM BMIRD_CASE JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) BMIRD_CASE.* FROM BMIRD_CASE JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM BMIRD_CASE JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT BMIRD_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM BMIRD_CASE JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('RUBELLA_CASE', 'RDB',
    'SELECT RUBELLA_CASE.* FROM RUBELLA_CASE JOIN INVESTIGATION ON RUBELLA_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) RUBELLA_CASE.* FROM RUBELLA_CASE JOIN INVESTIGATION ON RUBELLA_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM RUBELLA_CASE JOIN INVESTIGATION ON RUBELLA_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT RUBELLA_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM RUBELLA_CASE JOIN INVESTIGATION ON RUBELLA_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('CONFIRMATION_METHOD', 'RDB',
    'SELECT * FROM CONFIRMATION_METHOD;',
    NULL,
    NULL,
    'SELECT COUNT(*) FROM CONFIRMATION_METHOD JOIN INVESTIGATION ON CONFIRMATION_METHOD.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM CONFIRMATION_METHOD JOIN INVESTIGATION ON CONFIRMATION_METHOD.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('CONFIRMATION_METHOD_GROUP', 'RDB',
    'SELECT CONFIRMATION_METHOD_GROUP.* FROM CONFIRMATION_METHOD_GROUP JOIN INVESTIGATION ON CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) CONFIRMATION_METHOD_GROUP.* FROM CONFIRMATION_METHOD_GROUP JOIN INVESTIGATION ON CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    'SELECT CONFIRMATION_METHOD_GROUP.* FROM CONFIRMATION_METHOD_GROUP JOIN INVESTIGATION ON CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME IS NULL;',
    'SELECT COUNT(*) FROM CONFIRMATION_METHOD_GROUP JOIN INVESTIGATION ON CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT CONFIRMATION_METHOD_GROUP.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM CONFIRMATION_METHOD_GROUP JOIN INVESTIGATION ON CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('PERTUSSIS_CASE', 'RDB',
    'SELECT PERTUSSIS_CASE.* FROM PERTUSSIS_CASE JOIN INVESTIGATION ON PERTUSSIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) PERTUSSIS_CASE.* FROM PERTUSSIS_CASE JOIN INVESTIGATION ON PERTUSSIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM PERTUSSIS_CASE JOIN INVESTIGATION ON PERTUSSIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT PERTUSSIS_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM PERTUSSIS_CASE JOIN INVESTIGATION ON PERTUSSIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('D_CASE_MANAGEMENT', 'RDB',
    'SELECT D_CASE_MANAGEMENT.* FROM D_CASE_MANAGEMENT JOIN INVESTIGATION ON D_CASE_MANAGEMENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) D_CASE_MANAGEMENT.* FROM D_CASE_MANAGEMENT JOIN INVESTIGATION ON D_CASE_MANAGEMENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM D_CASE_MANAGEMENT JOIN INVESTIGATION ON D_CASE_MANAGEMENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT D_CASE_MANAGEMENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM D_CASE_MANAGEMENT JOIN INVESTIGATION ON D_CASE_MANAGEMENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('HEPATITIS_CASE', 'RDB',
    'SELECT HEPATITIS_CASE.* FROM HEPATITIS_CASE JOIN INVESTIGATION ON HEPATITIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) HEPATITIS_CASE.* FROM HEPATITIS_CASE JOIN INVESTIGATION ON HEPATITIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM HEPATITIS_CASE JOIN INVESTIGATION ON HEPATITIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT HEPATITIS_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM HEPATITIS_CASE JOIN INVESTIGATION ON HEPATITIS_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('HEPATITIS_DATAMART', 'RDB',
    'SELECT * FROM HEPATITIS_DATAMART WHERE REFRESH_DATETIME :operator :timestamp;',
    'SELECT TOP(:limit) * FROM HEPATITIS_DATAMART WHERE REFRESH_DATETIME :operator :timestamp ORDER BY REFRESH_DATETIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM HEPATITIS_DATAMART WHERE REFRESH_DATETIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY REFRESH_DATETIME ASC) AS RowNum FROM HEPATITIS_DATAMART WHERE REFRESH_DATETIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('LDF_DATA', 'RDB',
    'SELECT LDF_DATA.* FROM LDF_DATA JOIN LDF_GROUP ON LDF_DATA.LDF_GROUP_KEY = LDF_GROUP.LDF_GROUP_KEY JOIN INVESTIGATION ON LDF_GROUP.BUSINESS_OBJECT_UID = INVESTIGATION.CASE_UID WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) LDF_DATA.* FROM LDF_DATA JOIN LDF_GROUP ON LDF_DATA.LDF_GROUP_KEY = LDF_GROUP.LDF_GROUP_KEY JOIN INVESTIGATION ON LDF_GROUP.BUSINESS_OBJECT_UID = INVESTIGATION.CASE_UID WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    'SELECT LDF_DATA.* FROM LDF_DATA JOIN LDF_GROUP ON LDF_DATA.LDF_GROUP_KEY = LDF_GROUP.LDF_GROUP_KEY JOIN INVESTIGATION ON LDF_GROUP.BUSINESS_OBJECT_UID = INVESTIGATION.CASE_UID WHERE INVESTIGATION.LAST_CHG_TIME IS NULL;',
    'SELECT COUNT(*) FROM LDF_DATA JOIN LDF_GROUP ON LDF_DATA.LDF_GROUP_KEY = LDF_GROUP.LDF_GROUP_KEY JOIN INVESTIGATION ON LDF_GROUP.BUSINESS_OBJECT_UID = INVESTIGATION.CASE_UID WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT LDF_DATA.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM LDF_DATA JOIN LDF_GROUP ON LDF_DATA.LDF_GROUP_KEY = LDF_GROUP.LDF_GROUP_KEY JOIN INVESTIGATION ON LDF_GROUP.BUSINESS_OBJECT_UID = INVESTIGATION.CASE_UID WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

                                                                                                                                                               -- Add more for the other tables.
                                                                                                                                                               -- Follow this pattern for the remaining entries.

    ('D_INV_EPIDEMIOLOGY', 'RDB',
    'SELECT D_INV_EPIDEMIOLOGY.* FROM D_INV_EPIDEMIOLOGY JOIN F_PAGE_CASE ON D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY = F_PAGE_CASE.INVESTIGATION_KEY JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) D_INV_EPIDEMIOLOGY.* FROM D_INV_EPIDEMIOLOGY JOIN F_PAGE_CASE ON D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY = F_PAGE_CASE.INVESTIGATION_KEY JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    'SELECT D_INV_EPIDEMIOLOGY.* FROM D_INV_EPIDEMIOLOGY JOIN F_PAGE_CASE ON D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY = F_PAGE_CASE.INVESTIGATION_KEY JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME IS NULL;',
    'SELECT COUNT(*) FROM D_INV_EPIDEMIOLOGY JOIN F_PAGE_CASE ON D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY = F_PAGE_CASE.INVESTIGATION_KEY JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT D_INV_EPIDEMIOLOGY.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM D_INV_EPIDEMIOLOGY JOIN F_PAGE_CASE ON D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY = F_PAGE_CASE.INVESTIGATION_KEY JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('D_INTERVIEW', 'RDB',
    'SELECT D_INTERVIEW.* FROM D_INTERVIEW WHERE D_INTERVIEW.ADD_TIME :operator :timestamp OR D_INTERVIEW.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) D_INTERVIEW.* FROM D_INTERVIEW WHERE D_INTERVIEW.ADD_TIME :operator :timestamp OR D_INTERVIEW.LAST_CHG_TIME :operator :timestamp ORDER BY CASE WHEN D_INTERVIEW.ADD_TIME :operator :timestamp THEN D_INTERVIEW.ADD_TIME ELSE D_INTERVIEW.LAST_CHG_TIME END ASC;',
    NULL,
    'SELECT COUNT(*) FROM D_INTERVIEW WHERE D_INTERVIEW.ADD_TIME :operator :timestamp OR D_INTERVIEW.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT D_INTERVIEW.*, ROW_NUMBER() OVER (ORDER BY D_INTERVIEW.LAST_CHG_TIME ASC, D_INTERVIEW.ADD_TIME ASC) AS RowNum FROM D_INTERVIEW WHERE D_INTERVIEW.ADD_TIME :operator :timestamp OR D_INTERVIEW.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('F_PAGE_CASE', 'RDB',
    'SELECT F_PAGE_CASE.* FROM F_PAGE_CASE JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) F_PAGE_CASE.* FROM F_PAGE_CASE JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM F_PAGE_CASE JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT F_PAGE_CASE.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM F_PAGE_CASE JOIN INVESTIGATION ON F_PAGE_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('TREATMENT', 'RDB',
    'SELECT TREATMENT.* FROM TREATMENT JOIN TREATMENT_EVENT ON TREATMENT.TREATMENT_KEY = TREATMENT_EVENT.TREATMENT_KEY JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) TREATMENT.* FROM TREATMENT JOIN TREATMENT_EVENT ON TREATMENT.TREATMENT_KEY = TREATMENT_EVENT.TREATMENT_KEY JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    'SELECT TREATMENT.* FROM TREATMENT JOIN TREATMENT_EVENT ON TREATMENT.TREATMENT_KEY = TREATMENT_EVENT.TREATMENT_KEY JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME IS NULL;',
    'SELECT COUNT(*) FROM TREATMENT JOIN TREATMENT_EVENT ON TREATMENT.TREATMENT_KEY = TREATMENT_EVENT.TREATMENT_KEY JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT TREATMENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM TREATMENT JOIN TREATMENT_EVENT ON TREATMENT.TREATMENT_KEY = TREATMENT_EVENT.TREATMENT_KEY JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('D_PROVIDER', 'RDB',
    'SELECT * FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME :operator :timestamp;',
    'SELECT TOP(:limit) * FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME :operator :timestamp ORDER BY D_PROVIDER.PROVIDER_LAST_CHANGE_TIME ASC;',
    'SELECT * FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME IS NULL;',
    'SELECT COUNT(*) FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY PROVIDER_LAST_CHANGE_TIME ASC) AS RowNum FROM D_PROVIDER WHERE PROVIDER_LAST_CHANGE_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('NOTIFICATION', 'RDB',
    'SELECT N.* FROM NOTIFICATION N WHERE (N.NOTIFICATION_LAST_CHANGE_TIME :operator :timestamp) OR (N.NOTIFICATION_LAST_CHANGE_TIME IS NULL AND EXISTS (SELECT 1 FROM NOTIFICATION_EVENT NE JOIN INVESTIGATION I ON NE.INVESTIGATION_KEY = I.INVESTIGATION_KEY WHERE NE.NOTIFICATION_KEY = N.NOTIFICATION_KEY AND I.LAST_CHG_TIME :operator :timestamp));',
    'SELECT TOP(:limit) N.* FROM NOTIFICATION N WHERE (N.NOTIFICATION_LAST_CHANGE_TIME :operator :timestamp) OR (N.NOTIFICATION_LAST_CHANGE_TIME IS NULL AND EXISTS (SELECT 1 FROM NOTIFICATION_EVENT NE JOIN INVESTIGATION I ON NE.INVESTIGATION_KEY = I.INVESTIGATION_KEY WHERE NE.NOTIFICATION_KEY = N.NOTIFICATION_KEY AND I.LAST_CHG_TIME :operator :timestamp)) ORDER BY N.NOTIFICATION_LAST_CHANGE_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM NOTIFICATION N WHERE N.NOTIFICATION_LAST_CHANGE_TIME :operator :timestamp OR (N.NOTIFICATION_LAST_CHANGE_TIME IS NULL AND EXISTS (SELECT 1 FROM NOTIFICATION_EVENT NE JOIN INVESTIGATION I ON NE.INVESTIGATION_KEY = I.INVESTIGATION_KEY WHERE NE.NOTIFICATION_KEY = N.NOTIFICATION_KEY AND I.LAST_CHG_TIME :operator :timestamp));',
    'WITH PaginatedResults AS (SELECT N.*, ROW_NUMBER() OVER (ORDER BY N.NOTIFICATION_LAST_CHANGE_TIME ASC) AS RowNum FROM NOTIFICATION N WHERE N.NOTIFICATION_LAST_CHANGE_TIME :operator :timestamp OR (N.NOTIFICATION_LAST_CHANGE_TIME IS NULL AND EXISTS (SELECT 1 FROM NOTIFICATION_EVENT NE JOIN INVESTIGATION I ON NE.INVESTIGATION_KEY = I.INVESTIGATION_KEY WHERE NE.NOTIFICATION_KEY = N.NOTIFICATION_KEY AND I.LAST_CHG_TIME :operator :timestamp))) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('BMIRD_MULTI_VALUE_FIELD_GROUP', 'RDB',
    'SELECT BMIRD_MULTI_VALUE_FIELD_GROUP.* FROM BMIRD_MULTI_VALUE_FIELD_GROUP JOIN BMIRD_CASE ON BMIRD_MULTI_VALUE_FIELD_GROUP.BMIRD_MULTI_VAL_GRP_KEY = BMIRD_CASE.BMIRD_MULTI_VAL_GRP_KEY JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) BMIRD_MULTI_VALUE_FIELD_GROUP.* FROM BMIRD_MULTI_VALUE_FIELD_GROUP JOIN BMIRD_CASE ON BMIRD_MULTI_VALUE_FIELD_GROUP.BMIRD_MULTI_VAL_GRP_KEY = BMIRD_CASE.BMIRD_MULTI_VAL_GRP_KEY JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM BMIRD_MULTI_VALUE_FIELD_GROUP JOIN BMIRD_CASE ON BMIRD_MULTI_VALUE_FIELD_GROUP.BMIRD_MULTI_VAL_GRP_KEY = BMIRD_CASE.BMIRD_MULTI_VAL_GRP_KEY JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT BMIRD_MULTI_VALUE_FIELD_GROUP.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM BMIRD_MULTI_VALUE_FIELD_GROUP JOIN BMIRD_CASE ON BMIRD_MULTI_VALUE_FIELD_GROUP.BMIRD_MULTI_VAL_GRP_KEY = BMIRD_CASE.BMIRD_MULTI_VAL_GRP_KEY JOIN INVESTIGATION ON BMIRD_CASE.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('F_VAR_PAM', 'RDB',
    'SELECT F_VAR_PAM.* FROM F_VAR_PAM JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.ADD_TIME :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) F_VAR_PAM.* FROM F_VAR_PAM JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.ADD_TIME :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY CASE WHEN INVESTIGATION.ADD_TIME :operator :timestamp THEN INVESTIGATION.ADD_TIME ELSE INVESTIGATION.LAST_CHG_TIME END ASC;',
    NULL,
    'SELECT COUNT(*) FROM F_VAR_PAM JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.ADD_TIME :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT F_VAR_PAM.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, INVESTIGATION.ADD_TIME ASC) AS RowNum FROM F_VAR_PAM JOIN INVESTIGATION ON F_VAR_PAM.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.ADD_TIME :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('VAR_PAM_LDF', 'RDB',
    'SELECT VAR_PAM_LDF.* FROM VAR_PAM_LDF JOIN INVESTIGATION ON VAR_PAM_LDF.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE VAR_PAM_LDF.add_time :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) VAR_PAM_LDF.* FROM VAR_PAM_LDF JOIN INVESTIGATION ON VAR_PAM_LDF.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE VAR_PAM_LDF.add_time :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY CASE WHEN VAR_PAM_LDF.add_time :operator :timestamp THEN VAR_PAM_LDF.add_time ELSE INVESTIGATION.LAST_CHG_TIME END ASC;',
    NULL,
    'SELECT COUNT(*) FROM VAR_PAM_LDF JOIN INVESTIGATION ON VAR_PAM_LDF.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE VAR_PAM_LDF.add_time :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT VAR_PAM_LDF.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC, VAR_PAM_LDF.ADD_TIME ASC) AS RowNum FROM VAR_PAM_LDF JOIN INVESTIGATION ON VAR_PAM_LDF.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE VAR_PAM_LDF.ADD_TIME :operator :timestamp OR INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('D_PROVIDER', 'RDB',
    'SELECT * FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME :operator :timestamp;',
    'SELECT TOP(:limit) * FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME :operator :timestamp ORDER BY D_PROVIDER.PROVIDER_LAST_CHANGE_TIME ASC;',
    'SELECT * FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME IS NULL;',
    'SELECT COUNT(*) FROM D_PROVIDER WHERE D_PROVIDER.PROVIDER_LAST_CHANGE_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT *, ROW_NUMBER() OVER (ORDER BY PROVIDER_LAST_CHANGE_TIME ASC) AS RowNum FROM D_PROVIDER WHERE PROVIDER_LAST_CHANGE_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;'),

    ('TREATMENT_EVENT', 'RDB',
    'SELECT TREATMENT_EVENT.* FROM TREATMENT_EVENT JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'SELECT TOP(:limit) TREATMENT_EVENT.* FROM TREATMENT_EVENT JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp ORDER BY INVESTIGATION.LAST_CHG_TIME ASC;',
    NULL,
    'SELECT COUNT(*) FROM TREATMENT_EVENT JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp;',
    'WITH PaginatedResults AS (SELECT TREATMENT_EVENT.*, ROW_NUMBER() OVER (ORDER BY INVESTIGATION.LAST_CHG_TIME ASC) AS RowNum FROM TREATMENT_EVENT JOIN INVESTIGATION ON TREATMENT_EVENT.INVESTIGATION_KEY = INVESTIGATION.INVESTIGATION_KEY WHERE INVESTIGATION.LAST_CHG_TIME :operator :timestamp) SELECT * FROM PaginatedResults WHERE RowNum BETWEEN :startRow AND :endRow;');

-- Add additional tables following this same pattern
